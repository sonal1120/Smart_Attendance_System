import streamlit as st
from streamlit_webrtc import (
    ClientSettings,
    VideoTransformerBase,
    WebRtcMode,
    webrtc_streamer,
)
import av
import cv2
import numpy as np

# Home page
st.set_page_config(page_title='Home')

st.title('Real-Time Attendance System')

st.markdown(
    """
    This is a real-time attendance system that performs face recognition 
    and generates an attendance report. Please select an option from the 
    sidebar to get started.
    """
)

# Sidebar
option = st.sidebar.selectbox('Options', ['Home', 'Registration Form', 'Real-Time Prediction', 'Attendance Report'])

if option == 'Home':
    st.subheader('Home')
    st.markdown(
        """
        Welcome to the Real-Time Attendance System! Use the sidebar to navigate to different pages.
        """
    )

elif option == 'Registration Form':
    st.subheader('Registration Form')
    st.markdown(
        """
        Fill out the registration form to add a new person to the system. The form collects the person's 
        name and role and captures their facial features for recognition.
        """
    )
    st.info("Click the 'Start' button to begin registration.")

    # Start the registration form
    webrtc_streamer(key='registration_form', mode=WebRtcMode.SENDRECV, client_settings=ClientSettings())

elif option == 'Real-Time Prediction':
    st.subheader('Real-Time Prediction')
    st.markdown(
        """
        Perform real-time face recognition on a video stream. The system will identify the registered persons 
        and display their names and roles in the video feed.
        """
    )
    st.info("Click the 'Start' button to begin real-time prediction.")

    # Start real-time prediction
    webrtc_streamer(key='realtime_prediction', mode=WebRtcMode.SENDRECV, client_settings=ClientSettings())

elif option == 'Attendance Report':
    st.subheader('Attendance Report')
    st.markdown(
        """
        View the attendance report generated by the system. The report displays the date and time of each 
        attendance entry along with the corresponding person's name and role.
        """
    )
    st.info("Click the 'Load Logs' button to load the attendance report.")

    # Load logs
    if st.button('Load Logs'):
        st.info("Loading attendance report...")
        # Placeholder for loading logs from Redis database
        # Replace with actual function call
        st.success("Attendance report loaded successfully.")
